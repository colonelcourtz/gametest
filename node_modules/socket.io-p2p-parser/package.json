{
  "_args": [
    [
      {
        "raw": "socket.io-p2p-parser@git+https://github.com/tomcartwrightuk/socket.io-p2p-parser.git",
        "scope": null,
        "escapedName": "socket.io-p2p-parser",
        "name": "socket.io-p2p-parser",
        "rawSpec": "git+https://github.com/tomcartwrightuk/socket.io-p2p-parser.git",
        "spec": "git+https://github.com/tomcartwrightuk/socket.io-p2p-parser.git",
        "type": "hosted",
        "hosted": {
          "type": "github",
          "ssh": "git@github.com:tomcartwrightuk/socket.io-p2p-parser.git",
          "sshUrl": "git+ssh://git@github.com/tomcartwrightuk/socket.io-p2p-parser.git",
          "httpsUrl": "git+https://github.com/tomcartwrightuk/socket.io-p2p-parser.git",
          "gitUrl": "git://github.com/tomcartwrightuk/socket.io-p2p-parser.git",
          "shortcut": "github:tomcartwrightuk/socket.io-p2p-parser",
          "directUrl": "https://raw.githubusercontent.com/tomcartwrightuk/socket.io-p2p-parser/master/package.json"
        }
      },
      "/var/www/web/gametest/node_modules/socket.io-p2p"
    ]
  ],
  "_from": "git+https://github.com/tomcartwrightuk/socket.io-p2p-parser.git",
  "_id": "socket.io-p2p-parser@2.2.3",
  "_inCache": true,
  "_location": "/socket.io-p2p-parser",
  "_phantomChildren": {},
  "_requested": {
    "raw": "socket.io-p2p-parser@git+https://github.com/tomcartwrightuk/socket.io-p2p-parser.git",
    "scope": null,
    "escapedName": "socket.io-p2p-parser",
    "name": "socket.io-p2p-parser",
    "rawSpec": "git+https://github.com/tomcartwrightuk/socket.io-p2p-parser.git",
    "spec": "git+https://github.com/tomcartwrightuk/socket.io-p2p-parser.git",
    "type": "hosted",
    "hosted": {
      "type": "github",
      "ssh": "git@github.com:tomcartwrightuk/socket.io-p2p-parser.git",
      "sshUrl": "git+ssh://git@github.com/tomcartwrightuk/socket.io-p2p-parser.git",
      "httpsUrl": "git+https://github.com/tomcartwrightuk/socket.io-p2p-parser.git",
      "gitUrl": "git://github.com/tomcartwrightuk/socket.io-p2p-parser.git",
      "shortcut": "github:tomcartwrightuk/socket.io-p2p-parser",
      "directUrl": "https://raw.githubusercontent.com/tomcartwrightuk/socket.io-p2p-parser/master/package.json"
    }
  },
  "_requiredBy": [
    "/socket.io-p2p"
  ],
  "_resolved": "git+https://github.com/tomcartwrightuk/socket.io-p2p-parser.git#1091624359c870e451b1a3a7b2108969380173cd",
  "_shasum": "1ba5b7e9bb7fde33a13d5a99cd61210f63e7ee22",
  "_shrinkwrap": null,
  "_spec": "socket.io-p2p-parser@git+https://github.com/tomcartwrightuk/socket.io-p2p-parser.git",
  "_where": "/var/www/web/gametest/node_modules/socket.io-p2p",
  "bugs": {
    "url": "https://github.com/tomcartwrightuk/socket.io-p2p-parser/issues"
  },
  "dependencies": {
    "benchmark": "1.0.0",
    "component-emitter": "1.1.2",
    "debug": "0.7.4",
    "isarray": "0.0.1",
    "json3": "3.2.6"
  },
  "description": "socket.io protocol parser with added p2p",
  "devDependencies": {
    "expect.js": "0.2.0",
    "mocha": "1.16.2",
    "zuul": "1.6.3"
  },
  "gitHead": "1091624359c870e451b1a3a7b2108969380173cd",
  "homepage": "https://github.com/tomcartwrightuk/socket.io-p2p-parser#readme",
  "license": "MIT",
  "name": "socket.io-p2p-parser",
  "optionalDependencies": {},
  "readme": "\n# socket.io-p2p-parser\n\nThis parser mainly concists of a fork of [socket.io-parser](https://github.com/Automattic/socket.io-parser) with some added logic for chunking binary data. This may or may not be appropriate to merge back but in the meantime it lives here for inclusion in [socket.io-p2p](https://github.com/tomcartwrightuk/socket.io-p2p).\n\nA socket.io encoder and decoder written in JavaScript complying with version `3`\nof [socket.io-protocol](https://github.com/learnboost/socket.io-protocol).\nUsed by [socket.io](https://github.com/learnboost/socket.io) and\n[socket.io-client](https://github.com/learnboost/socket.io-client).\n\n## Parser API\n\n  socket.io-parser is the reference implementation of socket.io-protocol. Read\n  the full API here:\n  [socket.io-protocol](https://github.com/learnboost/socket.io-protocol).\n\n## Example Usage\n\n### Encoding and decoding a packet\n\n```js\nvar parser = require('socket.io-parser');\nvar encoder = new parser.Encoder();\nvar packet = {\n  type: parser.EVENT,\n  data: 'test-packet',\n  id: 13\n};\nencoder.encode(packet, function(encodedPackets) {\n  var decoder = new parser.Decoder();\n  decoder.on('decoded', function(decodedPacket) {\n    // decodedPacket.type == parser.EVENT\n    // decodedPacket.data == 'test-packet'\n    // decodedPacket.id == 13\n  });\n\n  for (var i = 0; i < encodedPackets.length; i++) {\n    decoder.add(encodedPackets[i]);\n  }\n});\n```\n\n### Encoding and decoding a packet with binary data\n\n```js\nvar parser = require('socket.io-parser');\nvar encoder = new parser.Encoder();\nvar packet = {\n  type: parser.BINARY_EVENT,\n  data: {i: new Buffer(1234), j: new Blob([new ArrayBuffer(2)])}\n  id: 15\n};\nencoder.encode(packet, function(encodedPackets) {\n  var decoder = new parser.Decoder();\n  decoder.on('decoded', function(decodedPacket) {\n    // decodedPacket.type == parser.BINARY_EVENTEVENT\n    // Buffer.isBuffer(decodedPacket.data.i) == true\n    // Buffer.isBuffer(decodedPacket.data.j) == true\n    // decodedPacket.id == 15\n  });\n\n  for (var i = 0; i < encodedPackets.length; i++) {\n    decoder.add(encodedPackets[i]);\n  }\n});\n```\nSee the test suite for more examples of how socket.io-parser is used.\n\n\n## License\n\nMIT\n",
  "readmeFilename": "Readme.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/tomcartwrightuk/socket.io-p2p-parser.git"
  },
  "scripts": {
    "test": "make test"
  },
  "version": "2.2.3"
}
